#!/usr/bin/env ruby
require 'nokogiri'
require 'open-uri'
require 'json'
require 'sequel'

module Craigslist

  BASE_URL = "http://raleigh.craigslist.org"

  module Listing
    TITLE_SELECTOR = "#titletextonly"
    PRICE_SELECTOR = ".price"
    DESCRIPTION_SELECTOR = "#postingbody"
    DATE_SELECTOR = ".timeago"

    def self.scrape(url)
      listing_doc = Nokogiri::HTML(open(url)) # Fetch listing page

      # Remove the printer-friendly text from the description
      # that includes unecessary QR code stuff
      description = listing_doc.css(DESCRIPTION_SELECTOR)
      description.css('.print-information').remove

      listing = {
        title: listing_doc.css(TITLE_SELECTOR).text,
        price: listing_doc.css(PRICE_SELECTOR).text,
        description: description.inner_html,
        date: listing_doc.css(DATE_SELECTOR).first["datetime"],
      }

      puts listing.inspect
    end
  end

  module Search
    CATEGORY = "apa"
    SEARCH_URL = BASE_URL + "/search/" + CATEGORY
    SEARCH_RESULTS_SELECTOR = '.result-row > a'

    def self.scrape
      doc = Nokogiri::HTML(open(SEARCH_URL)) # Fetch search results page

      results = doc.css(SEARCH_RESULTS_SELECTOR) # Selects links to listings
      offset = 0

      until results.empty?
        results.each do |result|
          Listing.scrape(BASE_URL + result["href"]);
        end

        puts "Page #{offset} DONE"
        offset += 100
        doc = Nokogiri::HTML(open(SEARCH_URL + "?s=#{offset}"))
        results = doc.css(SEARCH_RESULTS_SELECTOR)
      end
    end
  end
end

Craigslist::Search.scrape
